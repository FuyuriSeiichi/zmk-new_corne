#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
//#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100   // 10
#define ZMK_MOUSE_SCRL_VAL 140

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Tab/ESC Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp ESC>;
        };
        td2: td2 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "-/= Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp EQUAL>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&td1            &kp Q  &kp W      &kp E       &kp R  &kp T                              &kp UP               &kp Y        &kp U  &kp I      &kp O    &kp P     &td2
&mt LSHIFT TAB  &kp A  &kp S      &kp D       &kp F  &kp G                    &kp LEFT  &kp SLCK  &kp RIGHT  &kp H        &kp J  &kp K      &kp L    &kp SEMI  &mt RSHIFT SQT
&kp LCTRL       &kp Z  &kp X      &kp C       &kp V  &kp B       &kp PSCRN              &kp DOWN             &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                             &mt LALT BSPC  &mo 1   &kp LGUI                                          &mo 2  &kp ENTER  &kp SPACE
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp TILDE  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                        &mmv MOVE_UP                &kp N6           &kp N7        &kp N8     &kp N9            &kp N0     &kp BSLH
&trans     &none            &kp UP          &none         &none         &kp N5                        &mmv MOVE_LEFT  &mkp LCLK  &mmv MOVE_RIGHT  &kp PG_UP        &kp HOME      &kp INS    &trans            &trans     &trans
&trans     &kp LEFT         &kp DOWN        &kp RIGHT     &none         &none  &kp PSCRN                              &mmv MOVE_DOWN              &kp PG_DN        &kp END       &kp DEL    &trans            &trans     &trans
                                         &trans        &trans        &none                                                        &mkp LCLK      &mkp MCLK         &mkp RCLK
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp F1  &kp F2        &kp F3         &kp F4                 &kp F5                 &kp F6                             &msc SCRL_UP               &kp F7     &kp F8    &kp F9     &kp F10   &kp F11   &kp F12
&trans  &none         &kp UP         &rgb_ug RGB_TOG        &rgb_ug RGB_BRI        &bt BT_PRV        &msc SCRL_LEFT   &bt BT_CLR  &msc SCRL_RIGHT  &kp PG_UP  &kp HOME  &kp LBKT   &kp RBKT  &kp SEMI  &trans
&trans  &kp LEFT      &kp DOWN       &kp RIGHT              &rgb_ug RGB_BRD        &bt BT_NXT   &rgb_ug RGB_TOG       &msc SCRL_DOWN             &kp PG_DN  &kp END   &kp COMMA  &kp DOT   &trans    &trans
                                    &kp LALT     &trans     &none                                                                       &none      &trans     &none
            >;
            sensor-bindings = <&rgb_encoder>;
        };
    };
};
